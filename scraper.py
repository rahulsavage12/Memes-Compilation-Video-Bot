# Generated by Selenium IDE
import time
from selenium import webdriver
from selenium.webdriver.common.by import By
import urllib3
from tinydb import TinyDB, Query
from RedDownloader import RedDownloader
http=urllib3.PoolManager()
import os
import shutil
from moviepy.editor import *

PATH="E:/REELS/light/downloadedVideos"
SUBRED=["videomemes","dankmemes","memes","meme","funnyvideos"]   
DB = TinyDB('db.json')
VIDEOS_IN_EACH_SUBRED=2


def scrape_reddit():
    driver = webdriver.Chrome()
    DB.truncate()
    for i in SUBRED:
        driver.get("https://www.reddit.com/r/"+i+"/top/?t=day")
        driver.set_window_size(790, 824)
        no_of_pagedowns = 10
        while no_of_pagedowns:
            driver.execute_script("window.scrollTo(1,50000)")
            time.sleep(0.2)
            no_of_pagedowns-=1            
        videos=driver.find_elements(By.XPATH,'//a[@data-click-id]')
        count=0
        Videos = Query()
        for p in range(len(videos)):
            if count>VIDEOS_IN_EACH_SUBRED:
                break
            src= videos[p].get_attribute('href')
            if i in src and len(DB.search(Videos.link == src))==0:
                DB.insert({'link':src})
                count+=1
    driver.close()
    print("Videos scraped from Reddit.")

def download_videos():
    videos=DB.all()
    if (os.path.exists(PATH)):
        shutil.rmtree(PATH)
    os.mkdir(PATH)
    for i in range(len(videos)):
        print(videos[i]['link'])
        RedDownloader.Download(videos[i]['link'] , output="downloadedVideos/"+str(i))
    print("Videos downloaded from Reddit.")


def convert_images_to_video():
    if os.path.exists("final.mp4"):
        os.remove("final.mp4")
    image_folder='downloadedVideos'
    
    image_files = [os.path.join(image_folder,img)
                for img in os.listdir(image_folder)
                if img.endswith(".jpeg") ]
    clips = [ImageClip(m).set_duration(3)
      for m in image_files]

 
    video_files = [os.path.join(image_folder,img)
                for img in os.listdir(image_folder)
                if img.endswith(".mp4")]
    video_clips=[VideoFileClip(m) 
        for m in video_files]
    
    video_clips.extend(clips)
    
    concat_clip = concatenate_videoclips(video_clips, method="compose")
    
    concat_clip.write_videofile("final.mp4", fps=24)

scrape_reddit()

download_videos()

convert_images_to_video()